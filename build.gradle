plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'org.springframework.boot' version "2.7.12"
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'au.com.dius.pact' version '4.4.0-beta.2'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id "info.solidsoft.pitest" version "1.7.4"
    id 'org.owasp.dependencycheck' version '8.0.2'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'uk.gov.hmcts.java' version '0.12.27'
    id 'com.github.hmcts.rse-cft-lib' version '0.19.757'
}

def versions = [
        guava                : '32.0.1-jre',
        bspCommonLib         : '0.0.51',
        ccdClient            : '4.8.6',
        commonsIo            : '2.7',
        commonsLang3         : '3.11',
        hmctsNotify          : '3.17.0-RELEASE',
        junit                : '4.13.1',
        lombok               : '1.18.22',
        mockito              : '3.4.4',
        pact                 : '4.4.0-beta.2',
        pdfbox               : '2.0.25',
        reformLogging        : '5.1.9',
        serenity             : '3.2.5',
        serviceTokenGenerator: '4.0.3',
        springDoc            : '1.6.9',
        wiremock             : '2.27.2',
        apacheLogging        : '2.17.2',
        idamClient           : '2.0.1',
        jjwt                 : '0.9.1',
        skyscreamer          : '1.5.0',
        jaxbOsgi             : '2.3.3',
        springHateoas        : '1.5.1',
        tika                 : '2.4.1',
        amClient             : '1.7.3',
        sendLetterClient     : '3.0.23',
        elasticSearch        : '7.17.12',
        jacksonDatabind      : '2.13.2',
        retry                : '1.3.1'
]

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
    springCloudBomVersion = "2021.0.4"
    restAssuredBomVersion = "5.1.1"
}

group = 'uk.gov.hmcts.reform.finrem'
version = '0.0.1'
mainClassName = 'uk.gov.hmcts.reform.finrem.caseorchestration.CaseOrchestrationApplication'

compileJava.dependsOn processResources
build.dependsOn jacocoTestReport

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }

    functional {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/functionalTests/java']
        }
        resources {
            srcDirs = ['src/functionalTests/resources']
        }
    }

    contract {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDirs = ['src/contractTests/java']
        }
        resources.srcDir file('src/contractTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/integrationTest/java')
        }
        resources {
            srcDir('src/integrationTest/resources')
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations {
    functionalImplementation.extendsFrom testImplementation
    functionalRuntimeOnly.extendsFrom testRuntimeOnly
    cftlibRuntimeClasspath.extendsFrom runtimeClasspath
}

processTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

test {
    maxHeapSize = "2g"
    failFast = true
}

// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
sonarqube {
    def sonarExclusions = ['**/uk/gov/hmcts/reform/finrem/caseorchestration/config/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/model/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/scheduler/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/error/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/ccd/datamigration/model/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/AmendApplicationAboutToSubmitHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/ApprovedConsentOrderAboutToSubmitHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/RejectedConsentOrderSubmittedHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/CaseOrchestrationApplication',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/payments/config/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/payments/model/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/FinremCallbackRequest.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/controllers/GenericAboutToStartOrSubmitCallbackResponse.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/wrapper/IdamToken.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/GenericDocumentService.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/serialisation/FinremCallbackRequestDeserializer.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/correspondence/FinremSingleLetterOrEmailApplicantCorresponder.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/controllers/GenericAboutToStartOrSubmitCallbackResponse.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/utils/csv/CaseReference.java'
    ]

    properties {
        property "sonar.projectKey", "finrem-case-orchestration"
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.issue.ignore.multicriteria", "e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13"
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "java:S1141"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e2.ruleKey", "java:S3740"
        property "sonar.issue.ignore.multicriteria.e2.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e3.ruleKey", "java:S110"
        property "sonar.issue.ignore.multicriteria.e3.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e4.ruleKey", "java:S112"
        property "sonar.issue.ignore.multicriteria.e4.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e5.ruleKey", "java:S2925"
        property "sonar.issue.ignore.multicriteria.e5.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e6.ruleKey", "java:S5961"
        property "sonar.issue.ignore.multicriteria.e6.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e7.ruleKey", "java:S1874"
        property "sonar.issue.ignore.multicriteria.e7.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e8.ruleKey", "java:S1488"
        property "sonar.issue.ignore.multicriteria.e8.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e9.ruleKey", "java:S6201"
        property "sonar.issue.ignore.multicriteria.e9.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e10.ruleKey", "java:S5411"
        property "sonar.issue.ignore.multicriteria.e10.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e11.ruleKey", "java:S6201"
        property "sonar.issue.ignore.multicriteria.e11.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e12.ruleKey", "java:S1133"
        property "sonar.issue.ignore.multicriteria.e12.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e13.ruleKey", "java:S1135"
        property "sonar.issue.ignore.multicriteria.e13.resourceKey", "**/*.java"
    }
}

pitest {
    targetClasses.set(['uk.gov.hmcts.reform.finrem.caseorchestration.*'])
    excludedClasses.set(['uk.gov.hmcts.reform.finrem.caseorchestration.CaseOrchestrationApplication',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.model.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.config.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.controllers.PaymentByAccountStub',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.service.IdamAuthService'])
    excludedTestClasses.set(['uk.gov.hmcts.reform.finrem.caseorchestration.model.ccd.spreadsheet.FinremCaseDataTest',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.helper.GeneralApplicationHelperTest'])
    threads.set(4)
    outputFormats.set(['XML', 'HTML'])
    timestampedReports.set(false)
    mutationThreshold.set(50)
}

bootJar {
    archiveFileName = 'finrem-case-orchestration.jar'
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    description = "Runs smoke Tests"
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
}

task functional(type: Test) {
    description = "Runs functional Tests"
    setTestClassesDirs(sourceSets.functional.output.classesDirs)
    setClasspath(sourceSets.functional.runtimeClasspath)
}

task contractTest(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    setTestClassesDirs(sourceSets.contract.output.classesDirs)
    setClasspath(sourceSets.contract.runtimeClasspath)
    systemProperty 'pact.rootDir', "pacts"
}

task runAndPublishConsumerPactTests(type: Test) {
    dependsOn(contractTest)
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contract.output.classesDirs
    classpath = sourceSets.contract.runtimeClasspath
    finalizedBy(pactPublish)

}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task fortifyScan(type: JavaExec) {
    mainClass.set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

task buildCCDXlsx(type: Exec) {
    group 'ccd tasks'
    commandLine './bin/build-finrem-xlxs-definitions.sh'
}

bootWithCCD {
    dependsOn(buildCCDXlsx)

    doFirst() {
        project.file('./.aat-env').readLines().each() {
            def index = it.indexOf("=")
            def key = it.substring(0, index)
            def value = it.substring(index + 1)
            environment(key, value)
        }
    }

    //AAT or Local (IDAM and S2S Simulators)
    authMode = uk.gov.hmcts.rse.AuthMode.AAT

    environment("SERVICE_AUTH_MICROSERVICE", "finrem_case_orchestration")

    environment("FEATURE_ASSIGN_CASE_ACCESS", "false")
    environment("FEATURE_USE_USER_TOKEN", "true")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudBomVersion}"
        mavenBom "io.rest-assured:rest-assured-bom:${restAssuredBomVersion}"
    }
    dependencies {
        //CVE-2022-42252
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.69') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-websocket'
        }
        //VE-2022-31692, CVE-2022-31690 CVE-2023-20862
        dependencySet(group: 'org.springframework.security', version: '6.1.1') {
            entry 'spring-security-crypto'
        }
        //CVE-2023-20861
        dependencySet(group: 'org.springframework', version: '5.3.27') {
            entry 'spring-aop'
            entry 'spring-beans'
            entry 'spring-context'
            entry 'spring-core'
            entry 'spring-expression'
            entry 'spring-jcl'
            entry 'spring-webmvc'
        }
    }
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: versions.retry
    implementation group: 'com.google.guava', name: 'guava', version: versions.guava
    implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: versions.jaxbOsgi
    implementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: versions.jsonPathAssert
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springDoc
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: versions.idamClient
    implementation group: 'com.github.hmcts', name: 'ccd-client', version: versions.ccdClient
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceTokenGenerator
    implementation group: 'com.github.hmcts', name: 'bsp-common-lib', version: versions.bspCommonLib
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.apacheLogging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.apacheLogging
    implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: versions.springHateoas
    implementation group: 'org.apache.tika', name: 'tika-core', version: versions.tika
    implementation group: 'com.github.hmcts', name: 'send-letter-client', version: versions.sendLetterClient
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
    implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: versions.amClient
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: versions.elasticSearch
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind

    implementation("org.apache.poi:poi:5.2.3") {
        exclude group: "org.apache.commons", module: "commons-math3"
    }
    implementation("org.apache.poi:poi-ooxml:5.2.3") {
        exclude group: "org.apache.commons", module: "commons-math3"
    }

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.yaml", module: "snakeyaml"
    }

    implementation("org.springdoc:springdoc-openapi-ui") {
        exclude group: "org.yaml", module: "snakeyaml"
    }

    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.33'

    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: versions.hmctsNotify

    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools'

    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-starter-web'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: versions.wiremock
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation('com.github.hmcts:fortify-client:1.2.0:all')
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath
    testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured'

    functionalImplementation sourceSets.main.runtimeClasspath
    functionalImplementation sourceSets.test.runtimeClasspath
    functionalImplementation group: 'io.rest-assured', name: 'rest-assured'
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    functionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: versions.jjwt
    functionalImplementation group: 'junit', name: 'junit', version: versions.junit
    functionalImplementation("net.serenity-bdd:serenity-core:3.2.5") {
        exclude group: "commons-net", module: "commons-net"
        exclude group: "org.apache.commons", module: "commons-compress"
    }
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalImplementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    functionalImplementation group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    functionalImplementation group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox
    functionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalImplementation group: 'org.skyscreamer', name: 'jsonassert', version: versions.skyscreamer
    functionalImplementation group: 'com.github.hmcts', name: 'ccd-client', version: versions.ccdClient
    functionalImplementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceTokenGenerator
    functionalImplementation group: 'com.github.hmcts', name: 'bsp-common-lib', version: versions.bspCommonLib

    functionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    contractImplementation sourceSets.main.runtimeClasspath
    contractImplementation sourceSets.test.runtimeClasspath
    contractImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractImplementation group: 'au.com.dius.pact', name: 'consumer', version: versions.pact
    contractImplementation group: 'au.com.dius.pact.consumer', name: 'junit', version: versions.pact
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Tar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Zip) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

