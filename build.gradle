plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'org.sonarqube' version '6.3.1.5724'
    id 'org.springframework.boot' version '3.5.5' // TODO remove tomcat dependency once spring boot is upgraded
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'uk.gov.hmcts.java' version '0.12.67'
    id 'au.com.dius.pact' version '4.6.17'
    id "info.solidsoft.pitest" version "1.15.0"
    id 'com.github.hmcts.rse-cft-lib' version '0.19.1857'
}

apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.spring.dependency-management'

def versions = [
        guava                : '33.5.0-jre',
        bspCommonLib         : '0.2.0',
        ccdClient            : '5.2.0',
        commonsIo            : '2.20.0',
        commonsLang3         : '3.18.0',
        hmctsNotify          : '5.2.1-RELEASE',
        junit                : '4.13.2',
        lombok               : '1.18.40',
        mockito              : '5.19.0',
        pact                 : '4.6.17',
        pdfbox               : '3.0.5',
        reformLogging        : '6.1.9',
        serenity             : '4.2.34',
        serviceTokenGenerator: '5.3.3',
        springDoc            : '1.8.0',
        wiremock             : '3.0.1',
        apacheLogging        : '2.25.1',
        idamClient           : '3.0.4',
        springHateoas        : '1.5.6',
        tika                 : '3.2.2',
        amClient             : '1.59.2',
        sendLetterClient     : '5.1.1',
        elasticSearch        : '7.17.29',
        jacksonDatabind      : '2.19.2',
        retry                : '1.3.4',
        snakeyaml            : '2.4',
        loadbalancer         : '4.3.0',
        commonsValidator     : '1.7',
        commonsBeanUtils     : '1.11.0',
        tomcat               : '10.1.46'
]

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
    springCloudBomVersion = "2025.0.0"
    restAssuredBomVersion = "5.5.6"
}

group = 'uk.gov.hmcts.reform.finrem'
version = '0.0.1'
mainClassName = 'uk.gov.hmcts.reform.finrem.caseorchestration.CaseOrchestrationApplication'

checkstyle {
    toolVersion = '11.0.1'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

compileJava.dependsOn processResources
build.dependsOn jacocoTestReport

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }

    functional {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/functionalTests/java']
        }
        resources {
            srcDirs = ['src/functionalTests/resources']
        }
    }

    contract {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDirs = ['src/contractTests/java']
        }
        resources.srcDir file('src/contractTest/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/integrationTest/java')
        }
        resources {
            srcDir('src/integrationTest/resources')
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'}
}

configurations {
    functionalImplementation.extendsFrom testImplementation
    functionalRuntimeOnly.extendsFrom testRuntimeOnly
    cftlibRuntimeClasspath.extendsFrom runtimeClasspath
}

processTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

test {
    maxHeapSize = "2g"
    failFast = true
}

// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
sonarqube {
    def sonarExclusions = ['**/uk/gov/hmcts/reform/finrem/caseorchestration/config/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/model/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/scheduler/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/error/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/ccd/datamigration/model/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/AmendApplicationAboutToSubmitHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/ApprovedConsentOrderAboutToSubmitHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/RejectedConsentOrderSubmittedHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/uploadapprovedorder/contested/UploadApprovedOrderContestedMidHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/uploadapprovedorder/contested/UploadApprovedOrderContestedAboutToStartHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/uploadapprovedorder/contested/UploadApprovedOrderContestedAboutToSubmitHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/uploadapprovedorder/contested/UploadApprovedOrderContestedAboutToSubmittedHandler.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/CaseOrchestrationApplication',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/payments/config/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/payments/model/**',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/handler/FinremCallbackRequest.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/controllers/GenericAboutToStartOrSubmitCallbackResponse.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/wrapper/IdamToken.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/GenericDocumentService.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/serialisation/FinremCallbackRequestDeserializer.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/correspondence/FinremSingleLetterOrEmailApplicantCorresponder.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/controllers/GenericAboutToStartOrSubmitCallbackResponse.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/utils/csv/CaseReference.java',
                           '**/uk/gov/hmcts/reform/finrem/caseorchestration/utils/csv/CaseReferenceKeyValue.java',
                            '**/uk/gov/hmcts/reform/finrem/caseorchestration/service/SystemUserService.java'
    ]

    properties {
        property "sonar.cpd.exclusions", "**/GeneralApplicationDirectionsNewEventAboutToSubmitHandler.java,**/GeneralApplicationDirectionsNewEventAboutToStartHandler.java"
        property "sonar.projectKey", "finrem-case-orchestration"
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.outputLocation.get()}"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.issue.ignore.multicriteria", "e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11,e12,e13"
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "java:S1141"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e2.ruleKey", "java:S3740"
        property "sonar.issue.ignore.multicriteria.e2.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e3.ruleKey", "java:S110"
        property "sonar.issue.ignore.multicriteria.e3.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e4.ruleKey", "java:S112"
        property "sonar.issue.ignore.multicriteria.e4.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e5.ruleKey", "java:S2925"
        property "sonar.issue.ignore.multicriteria.e5.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e6.ruleKey", "java:S5961"
        property "sonar.issue.ignore.multicriteria.e6.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e7.ruleKey", "java:S1874"
        property "sonar.issue.ignore.multicriteria.e7.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e8.ruleKey", "java:S1488"
        property "sonar.issue.ignore.multicriteria.e8.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e9.ruleKey", "java:S6201"
        property "sonar.issue.ignore.multicriteria.e9.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e10.ruleKey", "java:S5411"
        property "sonar.issue.ignore.multicriteria.e10.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e11.ruleKey", "java:S6201"
        property "sonar.issue.ignore.multicriteria.e11.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e12.ruleKey", "java:S1133"
        property "sonar.issue.ignore.multicriteria.e12.resourceKey", "**/*.java"
        property "sonar.issue.ignore.multicriteria.e13.ruleKey", "java:S1135"
        property "sonar.issue.ignore.multicriteria.e13.resourceKey", "**/*.java"
    }
}

pitest {
    targetClasses.set(['uk.gov.hmcts.reform.finrem.caseorchestration.handler.*'])
    excludedClasses.set(['uk.gov.hmcts.reform.finrem.caseorchestration.CaseOrchestrationApplication',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.health.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.mapper.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.client.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.ccd.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.error.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.model.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.event.bulkscan.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.scheduler.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.utils.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.config.*',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.controllers.PaymentByAccountStub',
                         'uk.gov.hmcts.reform.finrem.caseorchestration.service.IdamAuthService'])
    excludedTestClasses.set(['uk.gov.hmcts.reform.finrem.caseorchestration.model.ccd.spreadsheet.FinremCaseDataTest',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.helper.GeneralApplicationHelperTest',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.health.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.mapper.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.ccd.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.error.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.integrationtest.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.model.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.util.*',
                             'uk.gov.hmcts.reform.finrem.caseorchestration.config.*',])
    threads.set(15)
    outputFormats.set(['XML', 'HTML'])
    timestampedReports.set(false)
    mutationThreshold.set(80)
    junit5PluginVersion.set('1.2.2')
}

bootJar {
    archiveFileName = 'finrem-case-orchestration.jar'
    manifest {
        attributes 'Implementation-Title': project.name,
            'Implementation-Version': project.version
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }
}

tasks.register('smoke', Test) {
    description = "Runs smoke Tests"
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
}

tasks.register('functional', Test) {
    description = "Runs functional Tests"
    setTestClassesDirs(sourceSets.functional.output.classesDirs)
    setClasspath(sourceSets.functional.runtimeClasspath)
}

tasks.register('contractTest', Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    setTestClassesDirs(sourceSets.contract.output.classesDirs)
    setClasspath(sourceSets.contract.runtimeClasspath)
    systemProperty 'pact.rootDir', "pacts"
}

tasks.register('runAndPublishConsumerPactTests', Test) {
    dependsOn(contractTest)
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contract.output.classesDirs
    classpath = sourceSets.contract.runtimeClasspath
    finalizedBy(pactPublish)

}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task fortifyScan(type: JavaExec) {
    mainClass.set("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

task buildCCDXlsx(type: Exec) {
    group 'ccd tasks'
    commandLine './bin/build-finrem-xlxs-definitions.sh'
}

bootWithCCD {
    dependsOn(buildCCDXlsx)

    doFirst() {
        project.file('./.aat-env').readLines().each() {
            def index = it.indexOf("=")
            def key = it.substring(0, index)
            def value = it.substring(index + 1)
            environment(key, value)
        }
    }

    // AAT (Local cftlib not currently supported)
    authMode = uk.gov.hmcts.rse.AuthMode.AAT

    environment("SERVICE_AUTH_MICROSERVICE", "finrem_case_orchestration")
    environment("FEATURE_ASSIGN_CASE_ACCESS", "false")

    // ccd-definition-store-api
    environment("WELSH_TRANSLATION_ENABLED", "false")
    environment("spring.profiles.active", "local")

    // ccd-data-store-api
    environment("UPLOAD_TIMESTAMP_FEATURED_CASE_TYPES", "FinancialRemedyContested")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudBomVersion}"
        mavenBom "io.rest-assured:rest-assured-bom:${restAssuredBomVersion}"
    }
    dependencies {
        //CVE-2023-33202
        dependencySet(group: 'org.bouncycastle', version: '1.77') {
            entry 'bcprov-jdk15on'
            entry 'bouncy-castle-crypto-package'
            entry 'bouncy_castle_crypto_package'
            entry 'bouncy_castle_for_java'
            entry 'legion-of-the-bouncy-castle'
            entry 'legion-of-the-bouncy-castle-java-crytography-api'
            entry 'the_bouncy_castle_crypto_package_for_java'
        }
        //CVE-2024-25710
        dependencySet(group: 'org.apache.commons', version: '1.28.0') {
            entry 'commons-compress'
        }
    }
}

dependencies {
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: versions.tomcat
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: versions.tomcat
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: versions.tomcat
    implementation group: 'commons-validator', name: 'commons-validator', version: versions.commonsValidator
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanUtils
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: versions.retry
    implementation group: 'com.google.guava', name: 'guava', version: versions.guava
    implementation group: 'com.jayway.jsonpath', name: 'json-path-assert', version: versions.jsonPathAssert
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springDoc
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: versions.idamClient
    implementation group: 'com.github.hmcts', name: 'core-case-data-store-client', version: versions.ccdClient
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceTokenGenerator
    implementation group: 'com.github.hmcts', name: 'bsp-common-lib', version: versions.bspCommonLib
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.apacheLogging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.apacheLogging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.apacheLogging
    implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: versions.springHateoas
    implementation group: 'org.apache.tika', name: 'tika-core', version: versions.tika
    implementation group: 'com.github.hmcts', name: 'send-letter-client', version: versions.sendLetterClient
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox
    implementation group: 'org.apache.pdfbox', name: 'pdfbox-io', version: versions.pdfbox
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.5.0'
    implementation('commons-fileupload:commons-fileupload') {
        version {
            strictly '[1.6.0,)'
        }
    }
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.14.0'
    implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: versions.amClient
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: versions.elasticSearch
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: versions.jacksonDatabind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jacksonDatabind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jacksonDatabind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
    developmentOnly group: 'org.springframework.cloud', name: 'spring-cloud-starter-loadbalancer', version: versions.loadbalancer

    implementation("org.apache.poi:poi:5.4.1") {
        exclude group: "org.apache.commons", module: "commons-math3"
    }
    implementation("org.apache.poi:poi-ooxml:5.4.1") {
        exclude group: "org.apache.commons", module: "commons-math3"
    }

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.yaml", module: "snakeyaml"
    }

    implementation("org.springdoc:springdoc-openapi-ui") {
        exclude group: "org.yaml", module: "snakeyaml"
    }

    implementation group: 'org.yaml', name: 'snakeyaml', version: versions.snakeyaml

    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: versions.hmctsNotify
    // Can be removed once notifications-java-client is updated
    implementation("org.bitbucket.b_c:jose4j:0.9.6")

    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools'

    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-starter-web'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    cftlibCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    cftlibAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    cftlibImplementation group: 'org.springframework', name: 'spring-aspects'

    testImplementation group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: versions.wiremock
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testImplementation('com.github.hmcts:fortify-client:1.4.10:all')
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }

    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath
    testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured'

    functionalImplementation sourceSets.main.runtimeClasspath
    functionalImplementation sourceSets.test.runtimeClasspath
    functionalImplementation group: 'io.rest-assured', name: 'rest-assured'
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    functionalImplementation group: 'junit', name: 'junit', version: versions.junit
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalImplementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    functionalImplementation group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    functionalImplementation group: 'org.apache.pdfbox', name: 'pdfbox', version: versions.pdfbox
    functionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalImplementation group: 'com.github.hmcts', name: 'core-case-data-store-client', version: versions.ccdClient
    functionalImplementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.serviceTokenGenerator
    functionalImplementation group: 'com.github.hmcts', name: 'bsp-common-lib', version: versions.bspCommonLib

    functionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    contractImplementation sourceSets.main.runtimeClasspath
    contractImplementation sourceSets.test.runtimeClasspath
    contractImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractImplementation group: 'au.com.dius.pact', name: 'consumer', version: versions.pact
    contractImplementation group: 'au.com.dius.pact.consumer', name: 'junit', version: versions.pact
    contractImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-loadbalancer'

    configurations.configureEach {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
}

tasks.withType(Jar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Tar).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(Zip).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('checkstyleMain') {
    maxWarnings = 3
}
