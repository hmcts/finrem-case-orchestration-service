buildscript {
    ext {
        springBootVersion = '2.2.4.RELEASE'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.42")
        classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.6.2'
    }
}

plugins {
    id 'au.com.dius.pact' version '3.5.24'
    id 'application'
    id 'checkstyle'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "info.solidsoft.pitest" version "1.4.5"
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '5.2.4'
    id 'org.sonarqube' version '2.7.1'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'net.ltgt.apt' version '0.10'
}


apply plugin: 'au.com.dius.pact'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'java'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'
apply plugin: 'net.serenity-bdd.aggregator'



group = 'uk.gov.hmcts.reform.finrem'
version = '0.0.1'
mainClassName = 'uk.gov.hmcts.reform.finrem.caseorchestration.CaseOrchestrationApplication'
sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenLocal()
    jcenter()
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url 'https://repo.spring.io/libs-milestone' }
}


sourceSets {
    testSmoke {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }

    functional {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/functionalTests/java']
        }
        resources {
            srcDirs = ['src/functionalTests/resources']
        }

    }

    contract {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs = ['src/contractTests/java']
        }
        resources {
            srcDirs = ['src/contractTests/resources']
        }

    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir('src/integrationTest/java')
        }
        resources {
            srcDir('src/integrationTest/resources')
        }
    }
}

configurations {
    functionalCompile.extendsFrom testCompile
    functionalRuntime.extendsFrom testRuntime
}

def versions = [
        bspCommonLib            : '0.0.28',
        ccdClient               : '4.6.4',
        commonsBeanUtils        : '1.9.4',
        commonsIo               : '2.5',
        commonsLang3            : '3.9',
        gradlePitest            : '1.4.5',
        jsonAssert              : '1.2.3',
        junit                   : '4.12',
        lombok                  : '1.16.18',
        mockito                 : '3.2.0',
        nimbus                  : '5.1',
        pact_version            : '3.5.24',
        pdfbox                  : '2.0.8',
        pitest                  : '1.4.5',
        powerMock               : '1.7.3',
        reformLogging           : '5.1.1',
        restAssured             : '3.0.3',
        serenity                : '2.0.90',
        serenityCucumber        : '1.9.49',
        serviceTokenGenerator   : '3.0.0',
        springfoxSwagger        : '2.9.2',
        sonarPitest             : '0.5',
        wiremock                : '2.25.1'
]

dependencyManagement {
    dependencies {
        // CVE-2019-10086
        dependency group: 'commons-beanutils', name: 'commons-beanutils', version: versions.commonsBeanUtils
        // CVE-2018-10237
        dependency group: 'com.google.guava', name: 'guava', version: '28.1-jre'
        // CVE-2019-17563
        dependency group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.31'
        dependency group: 'org.apache.tomcat.embed', name: 'tomcat-embed-el', version: '9.0.31'
        dependency group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '9.0.31'
    }
}

dependencies {
    implementation group: 'com.jayway.jsonpath', name:'json-path-assert', version: versions.jsonPathAssert
    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    implementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: versions.gradlePitest
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    implementation group: 'org.codehaus.sonar-plugins', name:'sonar-pitest-plugin', version: versions.sonarPitest
    implementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'
    implementation group: 'uk.gov.hmcts.reform', name: 'bsp-common-lib', version: versions.bspCommonLib
    implementation group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdClient
    implementation group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version:'0.0.5'
    implementation group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.reformLogging
    implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.0.4'
    implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceTokenGenerator

    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-devtools'

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
        exclude(module: 'android-json')
    }

    testImplementation group: 'au.com.dius', name: 'pact-jvm-provider-spring_2.12', version: versions.pact_version
    testImplementation group: 'com.github.tomakehurst', name:'wiremock', version: versions.wiremock
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testSmokeImplementation sourceSets.main.runtimeClasspath
    testSmokeImplementation sourceSets.test.runtimeClasspath

    functionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    functionalImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    functionalImplementation group: 'junit', name: 'junit', version: versions.junit
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalImplementation group: 'org.apache.commons', name: 'commons-lang3', version: versions.commonsLang3
    functionalImplementation group: 'org.mockito', name: 'mockito-core', version: versions.mockito
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    functionalImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    functionalImplementation group: 'org.pdfbox', name: 'com.springsource.org.pdfbox', version: '0.7.3'
    functionalImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
    functionalImplementation group: 'uk.gov.hmcts.reform', name: 'bsp-common-lib', version: versions.bspCommonLib
    functionalImplementation group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdClient
    functionalImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceTokenGenerator

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    contractImplementation group: 'au.com.dius', name: 'pact-jvm-provider-spring_2.12', version: versions.pact_version
    contractImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5_2.12', version: versions.pact_version
    contractImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8_2.12', version: versions.pact_version
    contractImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
    contractImplementation 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
    contractImplementation sourceSets.main.runtimeClasspath
    contractImplementation sourceSets.test.runtimeClasspath
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'dependency-check-suppressions.xml'
}

checkstyle.toolVersion = '8.29'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")

// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.8
            }
        }
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

def sonarExclusions = ['**/uk/gov/hmcts/reform/finrem/caseorchestration/config/**',
                       '**/uk/gov/hmcts/reform/finrem/caseorchestration/model/**',
                       '**/uk/gov/hmcts/reform/finrem/caseorchestration/error/**',
                       '**/uk/gov/hmcts/reform/finrem/caseorchestration/ccd/datamigration/model/**',
                       '**/uk/gov/hmcts/reform/finrem/caseorchestration/CaseOrchestrationApplication']

sonarqube {
    properties {
        property "sonar.projectKey", "finrem-case-orchestration"
        property "sonar.exclusions", sonarExclusions.join(', ')
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
    }
}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.finrem.caseorchestration.*']
    excludedClasses = ['uk.gov.hmcts.reform.finrem.caseorchestration.CaseOrchestrationApplication',
                       'uk.gov.hmcts.reform.finrem.caseorchestration.model.*',
                       'uk.gov.hmcts.reform.finrem.caseorchestration.config.*',
                       'uk.gov.hmcts.reform.finrem.caseorchestration.controllers.PaymentByAccountStub']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 80
}

compileJava.dependsOn(processResources)
build.dependsOn jacocoTestReport

bootJar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
    archiveName 'finrem-case-orchestration.jar'
}

pact {
    publish {
        pactDirectory = 'target/pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?:'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
        version = versions.pact_version
    }
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.testSmoke.output.classesDirs
    classpath = sourceSets.testSmoke.runtimeClasspath
    finalizedBy aggregate
}

task functional(type: Test) {
    description = "Runs functional Tests"
    setTestClassesDirs(sourceSets.functional.output.classesDirs)
    setClasspath(sourceSets.functional.runtimeClasspath)
    finalizedBy aggregate
}

task contractTest(type: Test) {
    description = "Runs Contract Tests"
    setTestClassesDirs(sourceSets.contract.output.classesDirs)
    setClasspath(sourceSets.contract.runtimeClasspath)
    finalizedBy aggregate
}
